/*
 * Copyright (c) 2018. Christian Grach <christian.grach@cmgapps.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
apply plugin: "com.jfrog.bintray"
apply plugin: 'maven-publish'

def scmUrl = 'https://github.com/chrimaeon/lint-nullify'

def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution "repo"
        }
    }
    developers {
        developer {
            id 'chrimaeon'
            name 'Christian Grach'
        }
    }

    scm {
        url scmUrl
    }
}

publishing {
    publications {
        bintray(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId group
            artifactId 'checks'
            version project.version
            pom.withXml {
                def root = asNode()
                root.children().last() + pomConfig
            }
        }
    }

}

bintray {
    Properties credentialProps = new Properties()
    credentialProps.load(new FileInputStream(file("${project.rootDir}/credentials.properties")))
    user = credentialProps.user
    key = credentialProps.key
    publications = ['bintray']
    pkg {
        repo = 'maven'
        name = "${project.group}:checks"
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = scmUrl
        version {
            name = project.version
            vcsTag = project.version
            released  = new Date()
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
